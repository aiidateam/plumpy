[build-system]
requires = ['flit_core >=3.4,<4']
build-backend = 'flit_core.buildapi'

[project]
name = 'plumpy'
dynamic = ['version']
description = 'A Python workflow library.'
authors = [
    {name = 'Martin Uhrin', email = 'martin.uhrin@gmail.com'},
    {name = 'Sebastiaan Huber'},
    {name = 'Jason Yu'},
    {name = 'Leopold Talirz'},
    {name = 'Dominik Gresch'},
]
readme = 'README.md'
license = {file = 'LICENSE.txt'}
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'License :: OSI Approved :: MIT License',
    'License :: OSI Approved :: GNU General Public License v3 (GPLv3)',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
]
keywords = ['workflow', 'multithreaded', 'rabbitmq']
requires-python = '>=3.7'
dependencies = [
    'kiwipy[rmq]~=0.8.2',
    'nest_asyncio~=1.5,>=1.5.1',
    'pyyaml~=5.4',
]

[project.urls]
Home = 'https://github.com/aiidateam/plumpy'
Source = 'https://github.com/aiidateam/plumpy'
Documentation = 'https://plumpy.readthedocs.io'

[project.optional-dependencies]
docs = [
    'ipython~=7.0',
    'jinja2==2.11.3',
    'kiwipy[docs]~=0.8.2',
    'markupsafe==2.0.1',
    'myst-nb~=0.11.0',
    'sphinx~=3.2.0',
    'sphinx-book-theme~=0.0.39',
    'importlib-metadata~=4.12.0',
]
pre-commit = [
    'mypy==0.982',
    'pre-commit~=2.2',
    'pylint==2.12.2',
    'types-pyyaml'
]
tests = [
    'ipykernel==6.12.1',
    'pytest==6.2.5',
    'pytest-asyncio==0.16.0',
    'pytest-cov==3.0.0',
    'pytest-notebook==0.7.0',
    'shortuuid==1.0.8',
]

[tool.flit.module]
name = 'plumpy'

[tool.flit.sdist]
exclude = [
    'docs/',
    'examples/',
    'test/',
]

[tool.flynt]
line-length = 120
fail-on-change = true

[tool.isort]
force_sort_within_sections = true
include_trailing_comma = true
line_length = 120
multi_line_output = 3

[tool.mypy]
show_error_codes = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
warn_unused_ignores = true
warn_redundant_casts = true

[[tool.mypy.overrides]]
module = 'test.*'
check_untyped_defs = false

[[tool.mypy.overrides]]
module = [
    'aio_pika.*',
    'aiocontextvars.*',
    'kiwipy.*',
    'nest_asyncio.*',
    'tblib.*',
]
ignore_missing_imports = true

[tool.pylint.format]
max-line-length = 120

[tool.pylint.messages_control]
disable = [
    'bad-continuation',
    'duplicate-code',
    'global-statement',
    'import-outside-toplevel',
    'inconsistent-return-statements',
    'locally-disabled',
    'missing-docstring',
    'protected-access',
    'raise-missing-from',
    'too-few-public-methods',
    'too-many-ancestors',
    'too-many-arguments',
    'too-many-instance-attributes',
]

[tool.pytest.ini_options]
minversion = '6.0'
testpaths = [
    'test',
]
filterwarnings = []

[tool.yapf]
align_closing_bracket_with_visual_indent = true
based_on_style = 'google'
coalesce_brackets = true
column_limit = 120
dedent_closing_brackets = true
indent_dictionary_value = false
split_arguments_when_comma_terminated = true

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py37

[testenv]
usedevelop = true

[testenv:py{37,38,39,310}]
description = Run the unit tests
extras =
    tests
commands = pytest {posargs}

[testenv:py{37,38,39,310}-pre-commit]
description = Run the style checks and formatting
extras =
    pre-commit
    tests
commands = pre-commit run {posargs}

[testenv:docs-{update,clean}]
description = Build the documentation
extras = docs
whitelist_externals = rm
commands =
    clean: rm -rf docs/_build
    sphinx-build -nW --keep-going -b {posargs:html} docs/source/ docs/_build/{posargs:html}

[testenv:docs-live]
description = Build the documentation and launch browser (with live updates)
extras = docs
deps = sphinx-autobuild
commands =
    sphinx-autobuild \
        --re-ignore _build/.* \
        --port 0 --open-browser \
        -n -b {posargs:html} docs/source/ docs/_build/{posargs:html}
"""
